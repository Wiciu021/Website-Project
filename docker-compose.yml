services:
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - build_files:/app/build
    working_dir: /app
    command: ["npm", "run", "build"]

  backend:
    build: ./backend
    env_file:
      - ./.env
    ports:
      - "${PORT}:${PORT}" 
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./backend:/app
      - static_data:/app/static/images/posts
    command: sh -c "sleep 5 && node src/config/setupBuckets.js && npm start" #only for the first time
    depends_on:
      - db
      - minio

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - build_files:/usr/share/nginx/html
      - ./nginx/static:/usr/share/nginx/static
    depends_on:
      - frontend
      - backend

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    volumes:
      - ./minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  static_data:
  postgres-data:
  build_files:
