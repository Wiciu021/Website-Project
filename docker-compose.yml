services:
  frontend:
    build: ./frontend
    container_name: frontend
    volumes:
      - ./frontend:/app
      - build_files:/app/build
    working_dir: /app
    command: ["npm", "run", "build"]

  backend:
    build: ./backend
    container_name: backend
    env_file:
      - ./.env
    ports:
      - "${PORT}:${PORT}" 
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./backend:/app
      - static_data:/app/static/images/posts
    command: sh -c "sleep 5 && node src/config/setupBuckets.js && npm start"
    depends_on:
      - db
      - minio
      - keycloak

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - build_files:/usr/share/nginx/html
      - ./nginx/static:/usr/share/nginx/static
    depends_on:
      - frontend
      - backend

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
      MINIO_SERVER_URL: http://minio:9000
    volumes:
      - ./minio-data:/data
    command: server /data --console-address ":9001" --address ":9000"
    networks:
      - default
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - keycloak-db
    volumes:
      - keycloak-app-data:/opt/keycloak/data
    networks:
      - default

  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - default

volumes:
  static_data:
  postgres-data:
  build_files:
  keycloak-db-data:
  keycloak-app-data:

networks:
  default:
    driver: bridge

